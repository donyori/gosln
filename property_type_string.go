// Code generated by "stringer -type=PropertyType -output=property_type_string.go -linecomment"; DO NOT EDIT.

package gosln

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Bool-1]
	_ = x[Int-2]
	_ = x[Int8-3]
	_ = x[Int16-4]
	_ = x[Int32-5]
	_ = x[Int64-6]
	_ = x[Uint-7]
	_ = x[Uint8-8]
	_ = x[Uint16-9]
	_ = x[Uint32-10]
	_ = x[Uint64-11]
	_ = x[Uintptr-12]
	_ = x[Float32-13]
	_ = x[Float64-14]
	_ = x[Complex64-15]
	_ = x[Complex128-16]
	_ = x[Bytes-17]
	_ = x[String-18]
	_ = x[Time-19]
	_ = x[maxPropertyType-20]
}

const _PropertyType_name = "boolintint8int16int32int64uintuint8uint16uint32uint64uintptrfloat32float64complex64complex128[]bytestringtime.TimePropertyType(20)"

var _PropertyType_index = [...]uint8{0, 4, 7, 11, 16, 21, 26, 30, 35, 41, 47, 53, 60, 67, 74, 83, 93, 99, 105, 114, 130}

func (i PropertyType) String() string {
	i -= 1
	if i < 0 || i >= PropertyType(len(_PropertyType_index)-1) {
		return "PropertyType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _PropertyType_name[_PropertyType_index[i]:_PropertyType_index[i+1]]
}
